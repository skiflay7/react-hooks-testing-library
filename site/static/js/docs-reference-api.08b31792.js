(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{"./docs/reference/api.md":function(e,n,a){"use strict";var t=a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/interopRequireDefault.js");Object.defineProperty(n,"__esModule",{value:!0}),n.default=m;var i=t(a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/extends.js")),l=t(a("./node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js")),o=(t(a("./node_modules/react/index.js")),a("./node_modules/@mdx-js/react/dist/index.es.js")),r={},d="wrapper";function m(e){var n=e.components,a=(0,l.default)(e,["components"]);return(0,o.mdx)(d,(0,i.default)({},r,a,{components:n,mdxType:"MDXLayout"}),(0,o.mdx)("h1",{id:"api"},"API"),(0,o.mdx)("h2",{id:"renderhookcallback-options"},(0,o.mdx)("inlineCode",{parentName:"h2"},"renderHook(callback[, options])")),(0,o.mdx)("p",null,"Renders a test component that will call the provided ",(0,o.mdx)("inlineCode",{parentName:"p"},"callback"),", including any hooks it calls, every time it renders."),(0,o.mdx)("blockquote",null,(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("em",{parentName:"p"},"Note: ",(0,o.mdx)("inlineCode",{parentName:"em"},"testHook")," has been renamed to ",(0,o.mdx)("inlineCode",{parentName:"em"},"renderHook"),". ",(0,o.mdx)("inlineCode",{parentName:"em"},"testHook")," will continue work in the current version with a deprecation warning, but will be removed in a future version.")),(0,o.mdx)("p",{parentName:"blockquote"},(0,o.mdx)("strong",{parentName:"p"},(0,o.mdx)("em",{parentName:"strong"},"You should update any usages of ",(0,o.mdx)("inlineCode",{parentName:"em"},"testHook")," to use ",(0,o.mdx)("inlineCode",{parentName:"em"},"renderHook")," instead.")))),(0,o.mdx)("h3",{id:"arguments"},"Arguments"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"function([props])"),") - function to call each render. This function should call one or more hooks for testing",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"The ",(0,o.mdx)("inlineCode",{parentName:"li"},"props")," passed into the callback will be the ",(0,o.mdx)("inlineCode",{parentName:"li"},"initialProps")," provided in the ",(0,o.mdx)("inlineCode",{parentName:"li"},"options")," until new props are provided by a ",(0,o.mdx)("inlineCode",{parentName:"li"},"rerender")," call"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"options")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),")",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"initialProps")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),") - the initial values to pass to the ",(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," function"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"wrapper")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"component"),") - pass a React component to wrap the test component",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"This is usually used to add context providers from ",(0,o.mdx)("inlineCode",{parentName:"li"},"React.createContext")," for the hook access with ",(0,o.mdx)("inlineCode",{parentName:"li"},"useContext"))))))),(0,o.mdx)("h3",{id:"returns"},"Returns"),(0,o.mdx)("ul",null,(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"result")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"object"),")",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"current")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"any"),") - the return value of the ",(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," function"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"error")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"Error"),") - the error that was thrown if the ",(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," function threw an error during rendering"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"waitForNextUpdate")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"function"),") - returns a ",(0,o.mdx)("inlineCode",{parentName:"li"},"Promise")," that resolves the next time the hook renders, commonly when state is updated as the result of a asynchronous action"),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"rerender")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"function([newProps])"),") - function to rerender the test component including any hooks called in the ",(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," function",(0,o.mdx)("ul",{parentName:"li"},(0,o.mdx)("li",{parentName:"ul"},"If ",(0,o.mdx)("inlineCode",{parentName:"li"},"newProps")," are passed, the will replace the ",(0,o.mdx)("inlineCode",{parentName:"li"},"initialProps")," passed the the ",(0,o.mdx)("inlineCode",{parentName:"li"},"callback")," function for future renders"))),(0,o.mdx)("li",{parentName:"ul"},(0,o.mdx)("inlineCode",{parentName:"li"},"unmount")," (",(0,o.mdx)("inlineCode",{parentName:"li"},"function()"),") - function to unmount the test component, commonly used to trigger cleanup effects for ",(0,o.mdx)("inlineCode",{parentName:"li"},"useEffect")," hooks")),(0,o.mdx)("h2",{id:"actcallback"},(0,o.mdx)("inlineCode",{parentName:"h2"},"act(callback)")),(0,o.mdx)("p",null,"This is the same ",(0,o.mdx)("a",(0,i.default)({parentName:"p"},{href:"https://testing-library.com/docs/react-testing-library/api#act"}),(0,o.mdx)("inlineCode",{parentName:"a"},"act")," function")," that is exported by ",(0,o.mdx)("inlineCode",{parentName:"p"},"react-testing-library"),"."))}m&&m===Object(m)&&Object.isExtensible(m)&&Object.defineProperty(m,"__filemeta",{enumerable:!0,configurable:!0,value:{name:"MDXContent",filename:"docs/reference/api.md"}}),m.isMDXComponent=!0}}]);
//# sourceMappingURL=docs-reference-api.d3b2c5d5b76f34507b97.js.map