{"version":3,"sources":["/Users/mxp001/programming/frontend/libraries/react-hooks-testing-library/docs/reference/api.md"],"names":["_react2","_interopRequireDefault","__webpack_require__","layoutProps","MDXLayout","MDXContent","_ref","components","props","_objectWithoutProperties2","default","mdx","_extends2","mdxType","id","parentName","href","isMDXComponent"],"mappings":"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","file":"static/js/docs-reference-api.08b31792.js","sourcesContent":["/* @jsx mdx */\n  import React from 'react'\n  import { mdx } from '@mdx-js/react'\n  /* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1 {...{\n      \"id\": \"api\"\n    }}>{`API`}</h1>\n    <h2 {...{\n      \"id\": \"renderhookcallback-options\"\n    }}><inlineCode parentName=\"h2\">{`renderHook(callback[, options])`}</inlineCode></h2>\n    <p>{`Renders a test component that will call the provided `}<inlineCode parentName=\"p\">{`callback`}</inlineCode>{`, including any hooks it calls, every time it renders.`}</p>\n    <blockquote>\n      <p parentName=\"blockquote\"><em parentName=\"p\">{`Note: `}<inlineCode parentName=\"em\">{`testHook`}</inlineCode>{` has been renamed to `}<inlineCode parentName=\"em\">{`renderHook`}</inlineCode>{`. `}<inlineCode parentName=\"em\">{`testHook`}</inlineCode>{` will continue work in the current version with a deprecation warning, but will be removed in a future version.`}</em></p>\n      <p parentName=\"blockquote\"><strong parentName=\"p\"><em parentName=\"strong\">{`You should update any usages of `}<inlineCode parentName=\"em\">{`testHook`}</inlineCode>{` to use `}<inlineCode parentName=\"em\">{`renderHook`}</inlineCode>{` instead.`}</em></strong></p>\n    </blockquote>\n    <h3 {...{\n      \"id\": \"arguments\"\n    }}>{`Arguments`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`callback`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`function([props])`}</inlineCode>{`) - function to call each render. This function should call one or more hooks for testing`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`The `}<inlineCode parentName=\"li\">{`props`}</inlineCode>{` passed into the callback will be the `}<inlineCode parentName=\"li\">{`initialProps`}</inlineCode>{` provided in the `}<inlineCode parentName=\"li\">{`options`}</inlineCode>{` until new props are provided by a `}<inlineCode parentName=\"li\">{`rerender`}</inlineCode>{` call`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`options`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`)`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`initialProps`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`) - the initial values to pass to the `}<inlineCode parentName=\"li\">{`callback`}</inlineCode>{` function`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`wrapper`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`component`}</inlineCode>{`) - pass a React component to wrap the test component`}<ul parentName=\"li\">\n              <li parentName=\"ul\">{`This is usually used to add context providers from `}<inlineCode parentName=\"li\">{`React.createContext`}</inlineCode>{` for the hook access with `}<inlineCode parentName=\"li\">{`useContext`}</inlineCode></li>\n            </ul></li>\n        </ul></li>\n    </ul>\n    <h3 {...{\n      \"id\": \"returns\"\n    }}>{`Returns`}</h3>\n    <ul>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`result`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`object`}</inlineCode>{`)`}<ul parentName=\"li\">\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`current`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`any`}</inlineCode>{`) - the return value of the `}<inlineCode parentName=\"li\">{`callback`}</inlineCode>{` function`}</li>\n          <li parentName=\"ul\"><inlineCode parentName=\"li\">{`error`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`Error`}</inlineCode>{`) - the error that was thrown if the `}<inlineCode parentName=\"li\">{`callback`}</inlineCode>{` function threw an error during rendering`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`waitForNextUpdate`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`function`}</inlineCode>{`) - returns a `}<inlineCode parentName=\"li\">{`Promise`}</inlineCode>{` that resolves the next time the hook renders, commonly when state is updated as the result of a asynchronous action`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`rerender`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`function([newProps])`}</inlineCode>{`) - function to rerender the test component including any hooks called in the `}<inlineCode parentName=\"li\">{`callback`}</inlineCode>{` function`}<ul parentName=\"li\">\n          <li parentName=\"ul\">{`If `}<inlineCode parentName=\"li\">{`newProps`}</inlineCode>{` are passed, the will replace the `}<inlineCode parentName=\"li\">{`initialProps`}</inlineCode>{` passed the the `}<inlineCode parentName=\"li\">{`callback`}</inlineCode>{` function for future renders`}</li>\n        </ul></li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`unmount`}</inlineCode>{` (`}<inlineCode parentName=\"li\">{`function()`}</inlineCode>{`) - function to unmount the test component, commonly used to trigger cleanup effects for `}<inlineCode parentName=\"li\">{`useEffect`}</inlineCode>{` hooks`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"actcallback\"\n    }}><inlineCode parentName=\"h2\">{`act(callback)`}</inlineCode></h2>\n    <p>{`This is the same `}<a parentName=\"p\" {...{\n        \"href\": \"https://testing-library.com/docs/react-testing-library/api#act\"\n      }}><inlineCode parentName=\"a\">{`act`}</inlineCode>{` function`}</a>{` that is exported by `}<inlineCode parentName=\"p\">{`react-testing-library`}</inlineCode>{`.`}</p>\n    </MDXLayout>;\n}\n\nMDXContent.isMDXComponent = true;\n  "],"sourceRoot":""}